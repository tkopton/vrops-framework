<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item12" object-name="workflow:name=generic" id="5ff1bd44-2c56-4e0f-8bc8-1c3e68c4ae73" version="0.1.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[changeCpuOfVM]]></display-name>
  <position y="9.045454545454543" x="125.0"/>
  <input>
    <param name="vcvm" type="VC:VirtualMachine">
      <description><![CDATA[The VM to change]]></description>
    </param>
    <param name="sockets" type="number"/>
    <param name="bootRequested" type="boolean"/>
    <param name="useHotAdd" type="boolean"/>
  </input>
  <attrib name="task" type="VC:Task" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="progress" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Log progess while waiting for the task]]></description>
  </attrib>
  <attrib name="pollRate" type="number" read-only="false">
    <value encoded="n"><![CDATA[5.0]]></value>
    <description><![CDATA[Polling rate for the task state [seconds]]]></description>
  </attrib>
  <attrib name="enityPropName" type="string" read-only="false">
    <value encoded="n"><![CDATA[VMCPUs]]></value>
  </attrib>
  <attrib name="propValue" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="propertyName" type="string" read-only="false">
    <value encoded="n"><![CDATA[VirtualMachine.CPU.Count]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="136.3181818181818" x="1384.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item13" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd">
    <display-name><![CDATA[vim3WaitTaskEnd]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;]]></script>
    <in-binding>
      <bind name="task" type="VC:Task" export-name="task">
        <description><![CDATA[Task to Wait for]]></description>
      </bind>
      <bind name="progress" type="boolean" export-name="progress">
        <description><![CDATA[Log progess while waiting for the task]]></description>
      </bind>
      <bind name="pollRate" type="number" export-name="pollRate">
        <description><![CDATA[Polling rate for the task state [seconds]]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Any" explicitly-not-bound="true"/>
    </out-binding>
    <description><![CDATA[Wait for a VC Task to end.
When task ended, return the task result if any. ]]></description>
    <position y="146.3181818181818" x="644.5"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item3" type="condition" alt-out-name="item1" comparator="0">
    <display-name><![CDATA[PoweredOn?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return ( ( vcvm != null ) && vcvm._finderResultAttribute("state") == "poweredOn") ;]]></script>
    <in-binding>
      <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
    </in-binding>
    <condition name="vcvm" type="VC:VirtualMachine" comparator="state" label="null">poweredOn</condition>
    <position y="9.045454545454543" x="364.5"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item7" type="task" script-module="com.vmware.library.vc.vm.power/forcePowerOff">
    <display-name><![CDATA[forcePowerOff]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").forcePowerOff(vm) ;]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcvm">
        <description><![CDATA[VM to power off]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="VC:Task" export-name="task"/>
    </out-binding>
    <description><![CDATA[Force the power off of a VM]]></description>
    <position y="19.045454545454543" x="644.5"/>
  </workflow-item>
  <workflow-item name="item7" out-name="item1" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd">
    <display-name><![CDATA[vim3WaitTaskEnd]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;]]></script>
    <in-binding>
      <bind name="task" type="VC:Task" export-name="task">
        <description><![CDATA[Task to Wait for]]></description>
      </bind>
      <bind name="progress" type="boolean" export-name="progress">
        <description><![CDATA[Log progess while waiting for the task]]></description>
      </bind>
      <bind name="pollRate" type="number" export-name="pollRate">
        <description><![CDATA[Polling rate for the task state [seconds]]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Any" explicitly-not-bound="true" export-name="NULL"/>
    </out-binding>
    <description><![CDATA[Wait for a VC Task to end.
When task ended, return the task result if any. ]]></description>
    <position y="73.59090909090908" x="644.5"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item1" type="link" linked-workflow-id="BD80808080808080808080808080808075C280800122528313869552e41805bb1">
    <display-name><![CDATA[Shut down guest OS and wait]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcvm">
        <description><![CDATA[Virtual machine to shut down]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Shuts down a guest operating system and waits for the process to complete.]]></description>
    <position y="73.59090909090908" x="504.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item6" type="custom-condition" alt-out-name="item4">
    <display-name><![CDATA[has VMware Tools?]]></display-name>
    <script encoded="false"><![CDATA[if ((vcvm.guest.toolsStatus.value == "toolsNotRunning") ||(vcvm.guest.toolsStatus.value =="toolsNotInstalled")){
	return false;
 } else  {
	return true;
}]]></script>
    <in-binding>
      <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
    </in-binding>
    <position y="9.045454545454543" x="504.5"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item0" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd">
    <display-name><![CDATA[vim3WaitTaskEnd]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;]]></script>
    <in-binding>
      <bind name="task" type="VC:Task" export-name="task">
        <description><![CDATA[Task to Wait for]]></description>
      </bind>
      <bind name="progress" type="boolean" export-name="progress">
        <description><![CDATA[Log progess while waiting for the task]]></description>
      </bind>
      <bind name="pollRate" type="number" export-name="pollRate">
        <description><![CDATA[Polling rate for the task state [seconds]]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Any" explicitly-not-bound="true" export-name="NULL"/>
    </out-binding>
    <description><![CDATA[Wait for a VC Task to end.
When task ended, return the task result if any. ]]></description>
    <position y="146.3181818181818" x="1204.5"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item9" type="task" script-module="com.vmware.library.vc.vm.power/startVM">
    <display-name><![CDATA[startVM]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.vm.power").startVM(vm,host) ;]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vcvm">
        <description><![CDATA[VM to start or resume]]></description>
      </bind>
      <bind name="host" type="VC:HostSystem" explicitly-not-bound="true" export-name="NULL">
        <description><![CDATA[[Optional] The host where the virtual machine is to be powered on. If no host is specified, the current associated host is used. This field must specify a host that is part of the same compute resource that the virtual machine is currently associated with. If this host is not compatible, the current host association is used. ]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="VC:Task" export-name="task"/>
    </out-binding>
    <description><![CDATA[Start / Resume a VM. Return the start task]]></description>
    <position y="146.3181818181818" x="1064.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[ChangeCPU]]></display-name>
    <script encoded="false"><![CDATA[var configSpec = new VcVirtualMachineConfigSpec();
configSpec.numCPUs = sockets;
configSpec.numCoresPerSocket = 1;
var task = vcvm.reconfigVM_Task( configSpec );
propValue=sockets.toString();
]]></script>
    <in-binding>
      <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
      <bind name="sockets" type="number" export-name="sockets"/>
    </in-binding>
    <out-binding>
      <bind name="task" type="VC:Task" export-name="task"/>
      <bind name="propValue" type="string" export-name="propValue"/>
    </out-binding>
    <position y="146.3181818181818" x="505.0"/>
  </workflow-item>
  <workflow-item name="item12" out-name="item1" type="custom-condition" alt-out-name="item5">
    <display-name><![CDATA[has HotAdd?]]></display-name>
    <script encoded="false"><![CDATA[if (System.getModule("de.vleet.vcExtentions").isHotAddCpuEnabled(vcvm) && useHotAdd)
	return true
else 
	return false]]></script>
    <in-binding>
      <bind name="useHotAdd" type="boolean" export-name="useHotAdd"/>
      <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
    </in-binding>
    <position y="9.045454545454543" x="225.0"/>
  </workflow-item>
  <workflow-item name="item13" out-name="item10" type="link" linked-workflow-id="316617a5-ad69-4cec-91e2-41ae54455a64">
    <display-name><![CDATA[updateVCACPropsEntity]]></display-name>
    <in-binding>
      <bind name="enityPropName" type="string" export-name="enityPropName"/>
      <bind name="propValue" type="string" export-name="propValue"/>
      <bind name="vcvm" type="VC:VirtualMachine" export-name="vcvm"/>
      <bind name="propertyName" type="string" export-name="propertyName"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[enityPropName, propertyName
VMTotalMemoryMB, VirtualMachine.Memory.Size
VMCPUs, VirtualMachine.CPU.Count]]></description>
    <position y="146.3181818181818" x="785.0"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item8" type="custom-condition" alt-out-name="item11">
    <display-name><![CDATA[boot desired?]]></display-name>
    <script encoded="false"><![CDATA[if(bootRequested && !useHotAdd)
	return true;
else
	return false;]]></script>
    <in-binding>
      <bind name="bootRequested" type="boolean" export-name="bootRequested"/>
      <bind name="useHotAdd" type="boolean" export-name="useHotAdd"/>
    </in-binding>
    <position y="136.3181818181818" x="925.0"/>
  </workflow-item>
  <workflow-item name="item11" type="end" end-mode="0">
    <position y="199.95454545454544" x="965.0"/>
  </workflow-item>
  <presentation>
    <p-param name="vcvm">
      <desc><![CDATA[The VM to change]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      <p-qual kind="static" name="defaultValue" type="VC:VirtualMachine"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='vcenter-01.vleet.local/vm-728'&dunesName='VC:VirtualMachine']]></p-qual>
    </p-param>
    <p-param name="sockets">
      <desc><![CDATA[vCPU]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      <p-qual kind="ognl" name="defaultValue" type="number"><![CDATA[GetAction("de.vleet.vra.tools","getVCPUsFromVM").call( #vcvm )]]></p-qual>
      <p-qual kind="static" name="maxNumberValue" type="Number"><![CDATA[16.0]]></p-qual>
      <p-qual kind="ognl" name="ognlValidator" type="String"><![CDATA[GetAction("de.vleet.vcExtentions","validateHotAddCpu").call( #vcvm , #sockets , #useHotAdd )]]></p-qual>
      <p-qual kind="static" name="numberFormat" type="String"><![CDATA[##]]></p-qual>
    </p-param>
    <p-param name="bootRequested">
      <desc><![CDATA[boot Machine when done]]></desc>
      <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
      <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#useHotAdd]]></p-qual>
    </p-param>
    <p-param name="useHotAdd">
      <desc><![CDATA[use HotAdd (no reboot rquired)]]></desc>
      <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[GetAction("de.vleet.vcExtentions","isHotAddCpuEnabled").call( #vcvm )]]></p-qual>
    </p-param>
  </presentation>
</workflow>